name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        
    - name: Run tests
      run: |
        python -m coverage run -m unittest discover -s . -p "test_*.py"
        python -m coverage report

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install flake8
      run: pip install flake8
      
    - name: Run linting
      run: flake8 . --count --show-source --statistics --max-line-length=120

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install bandit
      run: pip install bandit
      
    - name: Run security scan
      run: bandit -r . -f html -o bandit_report.html

  notify:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: always()
    steps:
    - name: Send notification
      run: |
        echo "Test result: ${{ needs.test.result }}"
        echo "Lint result: ${{ needs.lint.result }}"
        echo "Security result: ${{ needs.security.result }}"