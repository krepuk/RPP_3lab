name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch: # Manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install coverage
        
    - name: Run tests with coverage
      run: |
        python -m coverage run -m unittest discover
        python -m coverage report
        python -m coverage html
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install flake8
      run: pip install flake8

    - name: Run flake8 linting
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  security:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install bandit
      run: pip install bandit

    - name: Run bandit security scan
      run: bandit -r . -f html -o bandit_report.html || true

    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: bandit_report.html
        retention-days: 30

  notify:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    steps:
    - name: Send Telegram notification
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          MESSAGE="✅ Pipeline completed successfully!%0A%0A📝 Workflow: ${{ github.workflow }}%0A🔧 Commit: ${{ github.sha }}%0A🌿 Branch: ${{ github.ref_name }}"
        else
          MESSAGE="❌ Pipeline failed!%0A%0A📝 Workflow: ${{ github.workflow }}%0A🔧 Commit: ${{ github.sha }}%0A🌿 Branch: ${{ github.ref_name }}"
        fi
        
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MESSAGE" \
          -d parse_mode="HTML"